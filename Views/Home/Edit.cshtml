@model Registration.Models.StudentInformation

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/layout/_Layout.cshtml";
}

<div class="container">
    <h1 class="text-center">Edit Student Information</h1>
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h4 class="text-center">Student Information</h4>
            <hr />
            <form method="post" asp-controller="Home" asp-action="Edit" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="Id" />

                <!-- Name -->
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Email -->
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <!-- Mobile Number -->
                <div class="form-group">
                    <label asp-for="MobileNo" class="control-label"></label>
                    <input asp-for="MobileNo" class="form-control" />
                    <span asp-validation-for="MobileNo" class="text-danger"></span>
                </div>

                <!-- Language Dropdown -->
                <div class="form-group">
                    <label asp-for="Lang" class="control-label"></label>
                    <select asp-for="Lang" class="form-control" asp-items="ViewBag.Language">
                        <option value="">-- Select a Language --</option>
                    </select>
                    <span asp-validation-for="Lang" class="text-danger"></span>
                </div>

                <!-- Gender -->
                <div class="form-group">
                    <label asp-for="Gender" class="control-label"></label>
                    <div>
                        <input type="radio" name="Gender" value="Male" @(Model.Gender == "Male" ? "checked" : "") />
                        <label>Male</label>
                    </div>
                    <div>
                        <input type="radio" name="Gender" value="Female" @(Model.Gender == "Female" ? "checked" : "") />
                        <label>Female</label>
                    </div>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Languages</label>
                    @foreach (var language in ViewBag.Languages as List<SelectListItem>)
                    {
                        <div>
                            <input type="checkbox" name="Languages" value="@language.Value"
                            @(Model.Languages != null && Model.Languages.Contains(language.Value) ? "checked" : "") />
                            <label>@language.Text</label>
                        </div>
                    }
                    <span class="text-danger" id="languageError" style="display: none;"></span>
                </div>


                <!-- Date -->
                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                    <input asp-for="Date" class="form-control" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>

                <!-- Photo -->
                <div class="form-group">
                    <label>Current Photo File Name:</label>
                    <input type="text" id="photoFileName" asp-for="PhotoPath" readonly class="form-control" />
                    <span id="photoError" class="text-danger" style="display: none;"></span>
                </div>
                <div class="form-group">
                    <label for="photoFile">Upload New Photo (Optional):</label>
                    <input type="file" id="photoFile" name="PhotoFile" onchange="handleFileUpload('photoFile', 'photoFileName', 'photoError', 'image')" />
                    <button type="button"
                            class="btn btn-danger"
                            onclick="deleteItem('image', 'photoFileName', 'photoError')">
                        Delete Photo
                    </button>
                </div>

                <!-- Document -->
                <div class="form-group">
                    <label>Current Document File Name:</label>
                    <input type="text" id="documentFileName" asp-for="DocumentPath" readonly class="form-control" />
                    <span id="documentError" class="text-danger" style="display: none;"></span>
                </div>
                <div class="form-group">
                    <label for="documentFile">Upload New Document (Optional):</label>
                    <input type="file" id="documentFile" name="DocumentFile" onchange="handleFileUpload('documentFile', 'documentFileName', 'documentError', 'document')" />
                    <button type="button"
                            class="btn btn-danger"
                            onclick="deleteItem('document', 'documentFileName', 'documentError')">
                        Delete Document
                    </button>
                </div>

                <!-- Submit Button -->
                <div class="form-group d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary" onclick="return validateBeforeSubmit();">Save</button>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>


            </form>
        </div>
    </div>
</div>

<!-- JavaScript Validation -->
<script>
    function validateFile(inputId, allowedExtensions, errorMessageId) {
        var fileInput = document.getElementById(inputId);
        var errorMessage = document.getElementById(errorMessageId);

        fileInput.addEventListener("change", function () {
            var file = this.files[0];
            var fileExtension = file ? file.name.split('.').pop().toLowerCase() : '';

            if (file && allowedExtensions.indexOf(fileExtension) === -1) {
                errorMessage.style.display = "block";
            } else {
                errorMessage.style.display = "none";
            }
        });
    }

    // Validate photo file (only allow image extensions)
    validateFile("photoFile", ["jpg", "jpeg", "png", "gif", "bmp"], "photoError");

    // Validate document file (only allow pdf)
    validateFile("documentFile", ["pdf"], "documentError");

    // Validate at least one language is selected
    document.querySelector('form').addEventListener('submit', function (event) {
        const checkedLanguages = document.querySelectorAll('input[name="Languages"]:checked');
        const languageError = document.querySelector('span[asp-validation-for="Languages"]');

        if (checkedLanguages.length === 0) {
            event.preventDefault();
            languageError.textContent = "Please select at least one language.";
        } else {
            languageError.textContent = "";
        }
    });
</script>
<script>
        $(document).ready(function () {
        // Bind the form submit event
        $("#studentForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            // Perform basic validation
            if ($("#studentForm").valid()) {
                var formData = new FormData(this); // Collect form data

                // Log data for debugging
                console.log("Form is valid. Preparing to submit...");

                $.ajax({
                    url: '/Home/Edit', // Update URL if needed
                    type: 'POST',
                    data: formData,
                    processData: false, // Do not process data
                    contentType: false, // Do not set content type
                    success: function (response) {
                        if (response.success) {
                            alert("Data saved successfully!");
                            window.location.href = '/Home/Index'; // Redirect on success
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error: " + error);
                        alert("An error occurred while submitting the form.");
                    }
                });
            } else {
                alert("Please fix validation errors before submitting.");
            }
        });
    });

</script>

<script>
    $(document).ready(function () {
        // Function to validate checkboxes
        function validateLanguages() {
            var checkedLanguages = $("input[name='Languages']:checked").length; // Count checked checkboxes

            if (checkedLanguages === 0) {
                $("#languageError").text("Please select at least one language."); // Show error message
                return false;
            } else {
                $("#languageError").text(""); // Clear error message
                return true;
            }
        }

        // Trigger validation on form submit
        $("#studentForm").submit(function (event) {
            if (!validateLanguages()) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

        // Optional: Clear error message dynamically when a checkbox is toggled
        $("input[name='Languages']").change(function () {
            if ($("input[name='Languages']:checked").length > 0) {
                $("#languageError").text(""); // Clear error
            }
        });
    });
</script>
<script>
    function deleteItem(type, fileNameInputId) {
        if (confirm(`Are you sure you want to delete this ${type}?`)) {
            // Clear the file name from the input field
            const fileNameInput = document.getElementById(fileNameInputId);
            if (fileNameInput) {
                fileNameInput.value = ''; // Clear the value of the input field
                alert(`${type.charAt(0).toUpperCase() + type.slice(1)} cleared successfully.`);
            } else {
                alert(`Unable to find the ${type} input field.`);
            }
        }
    }
</script>
<script>
        function deleteItem(type, fileNameInputId, errorLabelId) {
        const fileNameInput = document.getElementById(fileNameInputId);
        const errorLabel = document.getElementById(errorLabelId);

        if (fileNameInput && fileNameInput.value.trim() === '') {
            // Show error if the file name is already empty
            errorLabel.textContent = `No ${type} to delete.`;
            errorLabel.style.display = 'block';
        } else if (confirm(`Are you sure you want to delete this ${type}?`)) {
            // Clear the file name if confirmed
            fileNameInput.value = '';
            errorLabel.style.display = 'none'; // Hide the error if any
            alert(`${type.charAt(0).toUpperCase() + type.slice(1)} cleared successfully.`);
        }
    }

    function handleFileUpload(inputId, fileNameInputId, errorLabelId, type) {
        const fileInput = document.getElementById(inputId);
        const fileNameInput = document.getElementById(fileNameInputId);
        const errorLabel = document.getElementById(errorLabelId);

        if (fileInput.files && fileInput.files[0]) {
            const file = fileInput.files[0];

            // Validate the file type (Optional)
            const allowedExtensions = type === 'image' ? ['jpg', 'jpeg', 'png', 'gif', 'bmp'] : ['pdf'];
            const fileExtension = file.name.split('.').pop().toLowerCase();

            if (allowedExtensions.indexOf(fileExtension) === -1) {
                errorLabel.textContent = `Invalid ${type} format. Please upload a valid file.`;
                errorLabel.style.display = 'block';
                fileInput.value = ''; // Clear the input
                return;
            }

            // Update the file name field dynamically
            fileNameInput.value = file.name;
            errorLabel.style.display = 'none';
        }
    }

    function validateBeforeSubmit() {
        const photoInput = document.getElementById('photoFileName');
        const documentInput = document.getElementById('documentFileName');
        const photoError = document.getElementById('photoError');
        const documentError = document.getElementById('documentError');

        let isValid = true;

        if (photoInput.value.trim() === '') {
            photoError.textContent = 'Photo file name cannot be empty.';
            photoError.style.display = 'block';
            isValid = false;
        } else {
            photoError.style.display = 'none';
        }

        if (documentInput.value.trim() === '') {
            documentError.textContent = 'Document file name cannot be empty.';
            documentError.style.display = 'block';
            isValid = false;
        } else {
            documentError.style.display = 'none';
        }<div class="form-group">
    <label asp-for="Lang" class="control-label"></label>
    <select asp-for="Lang" class="form-control" asp-items="ViewBag.Language">
        <option value="">-- Select a Language --</option>
    </select>
    <span id="languageError" class="text-danger"></span> <!-- Error message span -->
</div>

        return isValid; // Prevent form submission if validation fails
    }

</script>
<script>
    document.querySelector('form').addEventListener('submit', function (event) {
        const checkedLanguages = document.querySelectorAll('input[name="lstLanguages"]:checked');
        if (checkedLanguages.length === 0) {
            event.preventDefault(); // Prevent form submission
            alert("Please select at least one language.");
        }
    });
</script>
